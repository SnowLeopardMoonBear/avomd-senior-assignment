version: '3.9'
services:
  db:
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    env_file:
      - .env
    ports:
      - "6379:6379"

  web:
    build: .
    command: >
      sh -c "
        python manage.py collectstatic --noinput &&
        python manage.py makemigrations --noinput &&
        python manage.py migrate --noinput &&
        service nginx start &&
        gunicorn avomd_assignment_django.wsgi:application --bind 0.0.0.0:8000
      "
    volumes:
      - ./static:/app/static
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DJANGO_DB_HOST=${POSTGRES_HOST}
      - DJANGO_DB_NAME=${POSTGRES_DB}
      - DJANGO_DB_USER=${POSTGRES_USER}
      - DJANGO_DB_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_REDIS_HOST=${REDIS_HOST}
      - DJANGO_REDIS_PORT=${REDIS_PORT}
      - DJANGO_REDIS_PASSWORD=${REDIS_PASSWORD}

  celery:
    build: .
    command: celery -A avomd_assignment_django worker -l info -P eventlet
    user: nobody
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - DJANGO_DB_HOST=${POSTGRES_HOST}
      - DJANGO_DB_NAME=${POSTGRES_DB}
      - DJANGO_DB_USER=${POSTGRES_USER}
      - DJANGO_DB_PASSWORD=${POSTGRES_PASSWORD}
      - DJANGO_REDIS_HOST=${REDIS_HOST}
      - DJANGO_REDIS_PORT=${REDIS_PORT}
      - DJANGO_REDIS_PASSWORD=${REDIS_PASSWORD}

  test:
    build: .
    command: pytest --cov=jobs --cov-report=term-missing
    depends_on:
      - db
    environment:
      - DJANGO_SETTINGS_MODULE=avomd_assignment_django.settings
      # The test does not affect the DB as it runs within a transaction and rolls back when finished, with @pytest.mark.django_db decorator.
      - DJANGO_DB_HOST=${POSTGRES_HOST}
      - DJANGO_DB_NAME=${POSTGRES_DB}
      - DJANGO_DB_USER=${POSTGRES_USER}
      - DJANGO_DB_PASSWORD=${POSTGRES_PASSWORD}
      # The test uses a separate Redis database to avoid conflicts and to prevent actual calls to the OpenAI API.
      - DJANGO_REDIS_HOST=${REDIS_HOST}
      - DJANGO_REDIS_PORT=${REDIS_PORT}
      - DJANGO_REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_TEST_DB=15
    volumes:
      - .:/app

volumes:
  postgres_data: 